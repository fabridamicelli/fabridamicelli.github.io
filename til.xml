<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Fabrizio Damicelli</title>
<link>https://fabridamicelli.github.io/til.html</link>
<atom:link href="https://fabridamicelli.github.io/til.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.555</generator>
<lastBuildDate>Sun, 19 May 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Use .bigqueryrc to set BigQuery global configuration</title>
  <dc:creator>Fabrizio Damicelli</dc:creator>
  <link>https://fabridamicelli.github.io/til/2024-05-19-bigqueryrc.html</link>
  <description><![CDATA[ 




<p>I started using the nice vim plugin <a href="https://github.com/tpope/vim-dadbod">vim-dadbod</a> which allows to fire database queries and see the output <em>inside</em> vim/neovim.</p>
<p>While setting it up to work with <a href="https://cloud.google.com/bigquery?hl=en">BigQuery</a> I ran into the error coming from the fact that BigQuery’s format to name a table has changed in time and <code>bq</code> uses the old one (legacy) as default. The legacy format reads: <code>project:dataset.table</code> (notice <code>:</code>) while the newer format goes by: <code>project.dataset.table</code> (with <code>.</code> instead).</p>
<p>It turns out there is a file called <code>.bigqueryrc</code> where you can set a global configuration and tell <code>bq</code> (the command line tool to interact with BigQuery in the terminal) to use the newer format by setting the flag <code>use_legacy_sql=false</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">credential_file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">path</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">to</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">some</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">file.json</span></span>
<span id="cb1-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">project_id</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">name-of-your-default-project</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[query]</span></span>
<span id="cb1-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">use_legacy_sql</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span></span></code></pre></div>
<p>The CLI-tool <code>bq</code> also accepts the file as optional argument so you can pass custom config for a query. If you run <code>bq --help</code> you’ll see:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--bigqueryrc:</span> Path to configuration file. The configuration file specifies new</span>
<span id="cb2-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">defaults</span> for any flags, and can be overrridden by specifying the flag on the</span>
<span id="cb2-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> line. If the <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--bigqueryrc</span> flag is not specified, the BIGQUERYRC</span>
<span id="cb2-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">environment</span> variable is used. If that is not specified, the path</span>
<span id="cb2-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/.bigqueryrc"</span> is used.</span>
<span id="cb2-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">default:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/.bigqueryrc'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-7">    </span></code></pre></div>
<p>Read more about that in the <a href="https://cloud.google.com/bigquery/docs/reference/bq-cli-reference?hl=en">official documetation</a>.</p>
<p><strong>FIN</strong></p>
<hr>
<p>Any bugs, questions, comments, suggestions? Ping me on <a href="https://www.twitter.com/fabridamicelli">twitter</a> or drop me an e-mail (fabridamicelli at gmail).</p>



 ]]></description>
  <category>python</category>
  <guid>https://fabridamicelli.github.io/til/2024-05-19-bigqueryrc.html</guid>
  <pubDate>Sun, 19 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Force Python’s print function to flush the stream</title>
  <dc:creator>Fabrizio Damicelli</dc:creator>
  <link>https://fabridamicelli.github.io/til/2024-02-26-python-print-flush.html</link>
  <description><![CDATA[ 




<p>Say we have a python program that prints to <code>stdout</code> and we want to write that output into a file.<br>
We can achieve that like this:</p>
<div id="cell-2" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>bash</span>
<span id="cb1-2">python <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>c <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'print("great output</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">as always")'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.txt</span></code></pre></div>
</div>
<p>Which works fine:</p>
<div id="cell-4" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>bash</span>
<span id="cb2-2">cat <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.txt</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>great output
as always</code></pre>
</div>
</div>
<p>Now, if we want to do the same <strong>while</strong> the program is still running, things are a bit different.<br>
For example, this program will not write to file until we interrumpt it:</p>
<div id="cell-6" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>bash</span>
<span id="cb4-2">python <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>c <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">while True:</span></span>
<span id="cb4-4"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"great output</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">as always"</span>)<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt; newfile.txt</span></span></code></pre></div>
</div>
<p>That is, the command on the left side of <code>&gt;</code> will be run until it’s done and only then the file will be written.<br>
We want to fix that.<br>
In other words, stream the program output directly into the file while it’s being generated.</p>
<p>I found this solution to work, passing <code>flush=True</code> to the <code>print</code> function:</p>
<div id="cell-8" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>bash</span>
<span id="cb5-2">python <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>c <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">import time</span></span>
<span id="cb5-4"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">while True:</span></span>
<span id="cb5-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"great output</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">as always"</span>, flush<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;----- HERE</span></span>
<span id="cb5-6">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt; newfile.txt</span></span></code></pre></div>
</div>
<p>As the docstrings say, that forces the stream to be flushed:</p>
<div id="cell-10" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>?</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="ansi-escaped-output">
<pre><span class="ansi-red-fg">Docstring:</span>
print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)
Prints the values to a stream, or to sys.stdout by default.
Optional keyword arguments:
file:  a file-like object (stream); defaults to the current sys.stdout.
sep:   string inserted between values, default a space.
end:   string appended after the last value, default a newline.
flush: whether to forcibly flush the stream.
<span class="ansi-red-fg">Type:</span>      builtin_function_or_method
</pre>
</div>
</div>
</div>
<p><strong>FIN</strong></p>
<hr>
<p>Any bugs, questions, comments, suggestions? Ping me on <a href="https://www.twitter.com/fabridamicelli">twitter</a> or drop me an e-mail (fabridamicelli at gmail).</p>



 ]]></description>
  <category>python</category>
  <guid>https://fabridamicelli.github.io/til/2024-02-26-python-print-flush.html</guid>
  <pubDate>Mon, 26 Feb 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
